3) JS Form Validation
<!DOCTYPE html>
<html>
 <head>
 <script src="formnew3.js"> </script>
 </head>
 <body style="position: relative;
 bottom:-100px ;
 background-image:url('formimg.jpg');
 background-repeat: no-repeat;
 background-size: 100%;">
 <center>
<h1>FROM VALIDATION</h1>
 <form name="myform" method="post" action="" onsubmit="return validateform()">
 Name: <input type="text" name="name" /><br />
 <br />
 Email: <input type="email" name="email" minlength="10"/><br />
 <br />
 Password: <input type="password" name="password"><br/> <br> 
 Location: <input type="text" name="location" placeholder="enter location here"><br /><br />
 Phone No:<input type="text" name="phno" maxlength="10"><br><br>
 Gender: <input type="radio" name="gender" value="male">Male
<input type="radio" name="gender" value="female">Female<br><br>
 <input type="submit" value="submit" />
 </form>
 </center>
</body>
</html>
function validateform() {
 let name = document.myform.name.value
 let email = document.myform.email.value
 let password=document.myform.password.value
 let location = document.myform.location.value
 let phno = document.myform.phno.value
 let gender = document.myform.gender.value
 if (name == null || name == '') {
 alert("Name can't be blank")
 return false
 } 
 else if (email == null) 
 {
 alert(
 'Mail must be at least 6 characters long or check and enter a valid mail id'
 )
 return false
 } 
 else if (location == null || location == '') 
 {
 alert("location can't be blank ")
 return false
 } 
 else if (password.length < 6) 
 {
 alert('Password must be at least 6 characters long.')
 return false
 } 
 else if (phno == null || phno == '') 
 {
 alert('Enter a valid mobile No')
 return false
 } 
 else if (!gender.length) 
 {
 alert('You must select male or female')
 return false
 }
}
4) a Retrieve text file from web server
Index.html
<!DOCTYPE html>
<html>
<body>
<div id="demo">
<h1>The XMLHttpRequest Object</h1>
<button type="button" onclick="loadDoc()">Change Content</button>
</div>
<script>
function loadDoc() {
const xhttp = new XMLHttpRequest(); xhttp.onreadystatechange = function() {
if (this.readyState == 4 && this.status == 200) {
document.getElementById("demo").innerHTML =this.responseText; }
};
xhttp.open("GET", "ajax.txt", true); xhttp.send();
}
</script>
</body>
</html>
Ajax.txt
AJAX is not a programming language.
AJAX is a technique for accessing web servers from a web page.
AJAX stands for Asynchronous JavaScript And XML.
4b) retrieve data from xml file
<!DOCTYPE html>
<html>
<body bgcolor="FloralWhite">
<h1><center><font face="Arial">The XMLHttpRequest Object Form XML File</font></center></h1>
<p><b>Status: </b><span id ="A1"></span></p>
<p><b>Status Text: </b><span id ="A2"></span></p>
<p><b>Response: </b><span id ="A3"></span></p> 
<button type="button" onclick="loadDoc('assign.xml')">Click here</button>
<script>
function loadDoc(url)
{
var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function()
{
if (this.readyState == 4 && this.status == 200)
{
document.getElementById("A1").innerHTML =this.status; document.getElementById("A2").innerHTML = this.statusText;
document.getElementById("A3").innerHTML = this.responseText; }
};
xhttp.open("GET", url , true); 
xhttp.send();
}
</script>
</body>
</html>
assign.xml
<?xml version="1.0" encoding="UTF-8"?>
<books>
 <heading>Welcome To GeeksforGeeks </heading>
 <book>
 <title>Title -: Web Programming</title>
 <author>Author -: Chrisbates</author>
 <publisher>Publisher -: Wiley</publisher>
 <edition>Edition -: 3</edition>
 <price> Price -: 300</price>
 </book>
</books> 
5) Webpage using xml and css
Books.xml
<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="Rules.css"?>
<books>
 <heading>Welcome To GeeksforGeeks </heading>
 <book>
 <title>Title -: Web Programming</title>
 <author>Author -: Chrisbates</author>
 <publisher>Publisher -: Wiley</publisher>
 <edition>Edition -: 3</edition>
 <price> Price -: 300</price>
 </book>
 <book>
 <title>Title -: Internet world-wide-web</title>
 <author>Author -: Ditel</author>
 <publisher>Publisher -: Pearson</publisher>
 <edition>Edition -: 3</edition>
 <price>Price -: 400</price>
 </book>
 <book>
 <title>Title -: Computer Networks</title>
 <author>Author -: Foruouzan</author>
 <publisher>Publisher -: Mc Graw Hill</publisher>
 <edition>Edition -: 5</edition>
 <price>Price -: 700</price>
 </book>
 <book>
 <title>Title -: DBMS Concepts</title>
 <author>Author -: Navath</author>
 <publisher>Publisher -: Oxford</publisher>
 <edition>Edition -: 5</edition>
 <price>Price -: 600</price>
 </book>
 <book>
 <title>Title -: Linux Programming</title>
 <author>Author -: Subhitab Das</author>
 <publisher>Publisher -: Oxford</publisher>
 <edition>Edition -: 8</edition>
 <price>Price -: 300</price>
 </book>
</books>
Rules.css
books {
 color: white;
 background-color : gray;
 width: 100%;
}
heading {
 color: green;
 font-size : 40px;
 background-color : powderblue;
}
heading, title, author, publisher, edition, price {
 display : block;
}
title {
 font-size : 25px;
 font-weight : bold;
}
6) Angular directives
<!doctype html>
<html ng-app="myModule">
<head>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min
.js"></script>
<script src="book.js"></script>
<link rel="stylesheet" href="book.css">
<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/twitterbootstrap/2.0.4/css/bootstrap-combined.min.css">
</head>
<body><center><h1>The Book Details</h1>
<div ng-controller="myController">
<table>
<thead>
<tr>
<th>Title of Book</th>
<th>Author Name</th>
<th> Publisher Name</th>
<th> Price of the Book</th>
</tr>
</thead>
<tbody>
<tr ng-repeat="book in books">
<td>{{book.title | uppercase}}</td>
<td>{{book.author}}</td>
<td>{{book.publisher}}</td>
<td>{{book.price}}</td>
</tr> 
</tbody>
</center>
</body>
</html>
book.css
body{
 font-family:Arial;
 }
 table{
 border-collapse: collapse;
 }
 td{
 border:1px solid black;
 padding: 5px;
 }
 th{
 border:1px solid black;
 padding: 5px;
 text-align: left;
 }
book.js
var myApp = angular.module("myModule",[])
.controller("myController",function($scope){
var books=[
{title:"Junior Level Books Introduction to Computer",author:"Amit Garg", 
publisher:"Reader's Zone",price:"Rs.200/-" },
{title:"Client Server Computing",author:" Lalit Kumar ", publisher:"Sun India Publications",price:"Rs.400/-" },
{title:" Mobile Computing",author:"Vinay Kumar Singhal", publisher:"K Nath & Sons",price:"Rs.150/-" },
{title:"CBOT",author:"Verma", publisher:
 "Thakur Publications ",price: "Rs.80/-" },
];
$scope.books=books;
});
7) Angular expressions
<!doctype html>
<html ng-app>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min
.js"></script>
<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/twitterbootstrap/2.0.4/css/bootstrap-combined.min.css">
</head>
<body ng-app><h1><center>Angular JS Expressions</center></h1>
<div>
<h3>Angular JS Expressions for Evaluation</h3>
The value is: {{1+2*2}}
</div>
<div>
<h3>Angular JS Expressions for Array</h3>
The Array : {{[1,2,3,4,5,6,7,8,9][4]}}
</div>
<h3>Angular JS Expressions for Opertors</h3>
<div>
The Opertors is: {{1==1}}
</div>
<div>
The Opertors is: {{1==2}}
</div>
<h3>Angular JS Expressions for Numbers</h3>
<div ng-init="a=100;b=50">
the sum is: {{(a+b)}}
</div>
<h3>Angular JS Expressions for String</h3>
<div ng-init="s1='Welcome';s2='AngularJS'">
{{(s1+s2)}}
</div>
<h3>Angular JS Expressions for objects</h3>
<div ng-init="obj={s1:'Thank',s2:'You'}">
{{(obj.s1+" "+obj.s2)}}
</div> 
</body>
</html>
8) Jquery selectors
<!DOCTYPE html>
<html>
 <head>
 <style>
 h1{
 color: black;
 
 }
 body{
 text-align: center;
 background-color:floralwhite;
 }
 #hide{
 width: 50px;
 margin: 0 auto;
 }
 </style>
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
 <script>
 $(document).ready(function(){
 $("#hide").click(function(){
 $("p").hide();
 });
 $("#show").click(function(){
 $("p").show();
 });
});
 </script>
 </head>
 <body>
 <h1>jQUERY SELECTORS</h1>
 <h2>(39120109 -Sharon Swetha X)</h2>
 <div id="test">
 <h2 style="color: brown">Sathyabama University</h2>
 <p style="color: red">On clicking hide button...This line will be diappeared</p>
 <button id="hide" style="background-color: brown; color:whitesmoke">Hide</button>&nbsp;
 <button id="show" style="background-color: brown; color:whitesmoke"> Show</button>&nbsp;
 <button id="unselect" style="background-color: brown; color:whitesmoke">Unselect</button>
 </div>
 </body>
</html>
9) JQuery Events
<!DOCTYPE html>
<html>
<head>
<Title>39120109-JQuery Events</Title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script> 
$(document).ready(function(){
 $("#Tweet_head").click(function(){
 $("#Tweet_text").slideDown("slow");
 $("#Tweet_text").fadeOut("fast");
 $("#Tweet_text").fadeIn("fast");
 });
});
</script>
<style> 
#Tweet_text{
 padding: 40px;
 display: none;
}
#Tweet_text, #Tweet_head {
 padding: 5px;
 font-size: 5px;
 text-align: center;
 background-color: Floralwhite;
 border: solid 1px black;
}
.Tweet_pic{
height: 15%;
width:20%;
margin:auto;
}
</style>
</head>
<body>
<div id="Tweet_head">TWEET</div>
<div id="Tweet_text"><p>Machine learning (ML) is a type of artificial intelligence (AI) that allows software applications to become more 
accurate at 
predicting outcomes without being explicitly programmed to do so.<br>Machine learning algorithms use historical data as input to predict new 
output values.</p>
<img class="Tweet_pic" src="ml.png">
<br>
<center>Tweet by Sharon Swetha-39120109 .</center>
</div>
</body>
</html>
10) PHP form validation
<!DOCTYPE HTML>
<html>
<head>
<style>
.error{
color:yellow;}
body {
 background-image: url('2.jpg') ;
 background-repeat: no-repeat;
 background-attachment: fixed;
 background-size: cover;
}
</style>
</head>
<body>
<center>
<?php
// define variables and set to empty values
$nameErr = $emailErr = $genderErr = $websiteErr = "";
$name = $email = $gender = $comment = $website = "";
if ($_SERVER["REQUEST_METHOD"] == "POST") {
 if (empty($_POST["name"])) {
 $nameErr = "Name is required";
 } else {
 $name = test_input($_POST["name"]);
 if (!preg_match("/^[a-zA-Z-' ]*$/",$name)) {
 $nameErr = "Only letters and white space allowed";
}
 }
 if (empty($_POST["email"])) {
 $emailErr = "Email is required";
 } else {
 $email = test_input($_POST["email"]);
 if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
 $emailErr = "Invalid email format";
}
 }
 if (empty($_POST["website"])) {
 $website = "";
 } else {
 $website = test_input($_POST["website"]);
 if (!preg_match("/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i",$website)) {
 $websiteErr = "Invalid URL";
}
 }
 if (empty($_POST["comment"])) {
 $comment = "";
 } else {
 $comment = test_input($_POST["comment"]);
 }
 if (empty($_POST["gender"])) {
 $genderErr = "Gender is required";
 } else {
 $gender = test_input($_POST["gender"]);
 }
}
function test_input($data) {
 $data = trim($data);
 $data = stripslashes($data);
 $data = htmlspecialchars($data);
 return $data;
}
?>
<font color="white">
<h1> Form Validation </h1>
<p><span class="error">* required field</span></p>
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
 Name: <input type="text" name="name" placeholder="Enter name">
<span class="error">* <?php echo $nameErr;?></span>
<br><br>
 E-mail: <input type="text" name="email" placeholder="Enter email address">
<span class="error">* <?php echo $emailErr;?></span>
<br><br>
 Website: <input type="text" name="website" placeholder="Enter website url">
<span class="error"><?php echo $websiteErr;?></span>
<br><br>
 Comment: <textarea name="comment" rows="5" cols="40" placeholder="Your Comment"></textarea>
<br><br>
 Gender:
<input type="radio" name="gender" value="female">Female
<input type="radio" name="gender" value="male">Male
<input type="radio" name="gender" value="other">Other
<span class="error">* <?php echo $genderErr;?></span>
<br><br>
<input type="submit" name="submit" value="Submit">
</form>
<br>
<?php
echo "<h2>Your Input:</h2>";
echo $name;
echo "<br>";
echo $email;
echo "<br>";
echo $website;
echo "<br>";
echo $comment;
echo "<br>";
echo $gender;
?>
</font>
</center>
</body>
</html>
11) PHP Form handling
Index.html
<html>
<body>
<form action="welcome.php" method="post">
Name: <input type="text" name="name"><br>
E-mail: <input type="text" name="email"><br>
<input type="submit">
</form>
</body>
</html>
welcome.php
<html>
<body>
Welcome <?php echo $_POST["name"]; ?><br>
Your email address is: <?php echo $_POST["email"]; ?>
</body>
</html>
12) Database
<html>
<head>
<title> Database Connectivity</title>
</head>
<style>
body {
 background-image: url('s.jpg') ;
 background-repeat: no-repeat;
 background-attachment: fixed;
 background-size: cover;
}
</style>
<body>
<center>
<font color="white">
<h1> DATABASE CONNECTIVITY </h1>
<br>
<br>
<form action="data.php" method="post">
<b>Name: </b><input type="text" name="name" id="name"><br><br>
<b>RegNo: </b><input type="text" name="regno" id="regno"><br><br>
<input type="submit">
</font>
</center>
</form>
</body>
</html>
(PHP PAGE):
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "register";
$name=$_POST['name'];
$regno=$_POST['regno'];
// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);
// Check connection
if ($conn->connect_error) {
 die("Connection failed: " . $conn->connect_error);
}
$sql = "INSERT INTO datainfo (Name, RegNo)
VALUES ('$name', '$regno')";
if ($conn->query($sql) === TRUE) {
 echo "New record created successfully";
} else {
 echo "Error: " . $sql . "<br>" . $conn->error;
}
$conn->close();
 ?
